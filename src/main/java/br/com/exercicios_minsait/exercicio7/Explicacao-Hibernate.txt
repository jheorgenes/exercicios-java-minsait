1. Hibernate

Explique o que é o Hibernate e como ele facilita o mapeamento objeto-relacional em Java. Dê um exemplo de uma classe de entidade mapeada com Hibernate.
-----------------------------------------------------------------------------------------
R: O Hibernate é um framework de mapeamento objeto-relacional(ORM) para o Java. Ele automatiza a persistência de objetos Java em bancos de dados relacionais, ou seja,
transforma dados entre as tabelas do banco e os objetos Java de forma transparente.

O Hibernate facilita o mapeamento objeto-relacional, evitando escrever SQL manualmente para:
Inserir, buscar, atualizar e deletar dados;
Fazer joins;
Gerenciar conexões e transações.

Com Hibernate, você define classes Java (entidades) anotadas ou mapeadas por XML e o framework cuida de:
Gerar o SQL automaticamente;
Gerenciar conexões e transações;
Realizar cache, lazy loading, etc;
Permite trabalhar com validações, herança, relacionamentos (OneToMany, ManyToOne, etc).

A Classe Cliente exemplifica uma classe de entidade mapeada com Hibernate.
-----------------------------------------------------------------------------------------

import jakarta.persistence.*;

@Entity
@Table(name = "clientes")
public class Cliente {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(nullable = false)
    private String nome;

    @Column(unique = true, nullable = false)
    private String email;

    public Cliente() {}

    public Cliente(String nome, String email) {
        this.nome = nome;
        this.email = email;
    }

    // Getters e setters
    public Long getId() { return id; }

    public void setId(Long id) { this.id = id; }

    public String getNome() { return nome; }

    public void setNome(String nome) { this.nome = nome; }

    public String getEmail() { return email; }

    public void setEmail(String email) { this.email = email; }
}